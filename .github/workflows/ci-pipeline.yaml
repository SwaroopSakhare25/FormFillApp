# ci pipeline using GitHub Actions
name: CI Pipeline

on:
  push:
    branches:
    - ci-pipeline
    paths-ignore:
    - regapp-deploy.yml
  pull_request:
    branches:
    - ci-pipeline

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Build and test with maven
      run: mvn clean package

    - name: Upload Build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: /home/runner/work/FormFillApp/FormFillApp/webapp/target/*.war

  docker_build_and_push:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: build_and_test

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    outputs:
      image_tag: ${{ steps.set_output.outputs.image_tag }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Show directory contents
      run: ls -laR

    - name: Download Build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: dist/

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker REGISTRY
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN }}

    - name: Extract metadata for docker image
      id: metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=sha, format=long
          type=ref, event=branch
          latest 

    - name: Build Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}

    - name: Set image tag output
      id: set_output
      run: echo "image_tag=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

  Update_k8s_deployment:
    name: Update K8's Update_k8's_deployment
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    if: github.event_name == 'push' && github.ref == 'refs/heads/ci-pipeline'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup gitconfig
      run: |
        git config user.name "GitHub Actions"
        git config user.email "action@github.com"

    - name: Update Kubernetes deployment file
      env:
        IMAGE_TAG: sha-${{ github.sha }}
        GITHUB_REPOSITORY: ${{ github.repository}}
        REGISTRY: ghcr.io
      run: |
        # define the Image tag
        NEW_IMAGE=${REGISTRY}/${GITHUB_REPOSITORY}:${IMAGE_TAG}

        # Update the image in the deployment file
        sed -i "s|image: * |image: ${NEW_IMAGE} |" regapp-deploy.yml

        # Verify the changes in deployment file
        echo "Updated deploymet to use image: ${NEW_IMAGE}"
        grep -A 1 "image:" regapp-deploy.yml

    - name: Commit and Push changes
      run: |
        git add regapp-deploy.yml
        git commit -m " Update deployment file with new image tag ${IMAGE_TAG} [skip ci]" || echo "No changes to commit"  
        git push origin ci-pipeline
